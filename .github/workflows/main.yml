name: Advanced Secure CI Pipeline with Docker

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write
  
jobs:
  # --- NEW JOB 1: SECURITY SCAN ---
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Run TruffleHog SAST Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.before }}
          head: ${{ github.event.after }}

  # --- YOUR EXISTING JOB (with one change) ---
  build-push-and-run:
    # This job now depends on the scan passing
    needs: security-scan 
    
    runs-on: ubuntu-latest
    
    env:
      APP_ENV: ${{ secrets.APP_ENV }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      IMAGE_NAME: ghcr.io/${{ github.repository_owner.toLowerCase() }}/secure-devops-demo
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Run the secure container
        run: |
          docker run --rm \
            -e APP_ENV \
            -e DATABASE_HOST \
            -e DATABASE_USER \
            -e DATABASE_PASSWORD \
            -e DATABASE_NAME \
            -e JWT_SECRET_KEY \
            -e STRIPE_API_KEY \
            -e S3_BUCKET_NAME \
            -e S3_ACCESS_KEY \
            -e S3_SECRET_ACCESS_KEY \
            ${{ env.IMAGE_NAME }}:latest
